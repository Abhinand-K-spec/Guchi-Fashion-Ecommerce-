<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Your Cart</title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <link rel="stylesheet" href="/css/style.css" />

  <style>
    a { text-decoration: none; }
    .cart__table table { width: 100%; border-collapse: collapse; }
    .cart__table th, .cart__table td {
      padding: 20px;
      border: 1px solid #ebebeb;
      text-align: center;
      vertical-align: middle;
    }
    .cart__product__item img { width: 70px; border-radius: 4px; }
    .cart__quantity .pro-qty {
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .pro-qty input {
      width: 40px;
      text-align: center;
      border: 1px solid #ccc;
      margin: 0 5px;
      padding: 5px;
    }
    .pro-qty button.qtybtn {
      border: none;
      background: #f5f5f5;
      padding: 5px 10px;
      cursor: pointer;
    }
    .cart__btn a {
      background-color: #000;
      color: #fff;
      padding: 12px 30px;
      display: inline-block;
      text-transform: uppercase;
      font-weight: 600;
    }
    .cart__total {
      background: #f6f6f6;
      padding: 30px;
      border: 1px solid #ebebeb;
      text-align: right;
    }
    .cart__total h6 { font-weight: 700; margin-bottom: 20px; }
    .cart__total ul { list-style: none; padding: 0; margin: 0; }
    .cart__total ul li { font-size: 16px; margin-bottom: 10px; }
    .cart__total .primary-btn {
      background-color: #000;
      color: #fff;
      padding: 10px 25px;
      text-transform: uppercase;
      font-weight: 600;
      display: inline-block;
      margin-top: 20px;
    }
    .cart__total .primary-btn.hide { display: none; }
  </style>
</head>

<%- include('../partials/user/header') %>

<section class="shopping-cart spad">
  <div class="container">
    <div class="row">
      <div class="col-lg-12">
        <div class="cart__table">
          <table>
            <thead>
              <tr>
                <th>Image</th>
                <th class="p-name">Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th></th>
              </tr>
            </thead>
            <tbody>
              <% if (cartItems.length === 0) { %>
                <tr><td colspan="6">Your cart is empty</td></tr>
              <% } else { %>
                <% cartItems.forEach(item => { %>
                  <tr data-product-id="<%= item._id %>">
                    <td class="cart__product__item">
                      <img src="<%= item.image %>" alt="Product Image" />
                    </td>
                    <td class="cart__product__item__title">
                      <h6><%= item.name %></h6>
                    </td>
                    <td class="cart__price">₹<%= item.price %></td>
                    <td class="cart__quantity">
                      <% if (item.stock > 0) { %>
                        <div class="pro-qty" data-stock="<%= item.stock %>">
                          <button class="dec qtybtn" data-id="<%= item._id %>">-</button>
                          <input type="text" value="<%= item.quantity %>" readonly />
                          <button class="inc qtybtn" data-id="<%= item._id %>">+</button>
                        </div>
                      <% } else { %>
                        <span class="text-danger">Out of Stock</span>
                      <% } %>
                    </td>
                    <td class="cart__total">₹<%= item.itemTotal %></td>
                    <td class="cart__close">
                      <button class="remove-from-cart" data-id="<%= item._id %>">
                        <i class="fa fa-close"></i>
                      </button>
                    </td>
                  </tr>
                <% }) %>
              <% } %>
            </tbody>
          </table>
        </div>

        <div class="row mt-4">
          <div class="col-lg-6">
            <div class="cart__btn">
              <a href="/shopnow">Continue Shopping</a>
            </div>
          </div>
          <div class="col-lg-6 text-right">
            <div class="cart__total">
              <h6>Cart total</h6>
              <ul>
                <li>Subtotal <span class="subtotal">₹<%= totalPrice %></span></li>
              </ul>
              <% const hasOutOfStock = cartItems.some(item => item.stock === 0 || item.stock < item.quantity); %>
              <% if (hasOutOfStock) { %>
                <p class="text-danger">Please remove the out-of-stock product to proceed.</p>
              <% } %>
              <a href="/checkout" class="primary-btn <%= hasOutOfStock ? 'hide' : '' %>">Proceed to checkout</a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Quantity Limit Modal -->
  <div class="modal fade" id="qtyLimitModal" tabindex="-1" aria-labelledby="qtyLimitModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content text-center">
        <div class="modal-header">
          <h5 class="modal-title" id="qtyLimitModalLabel">Quantity Limit</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body" id="qtyModalMessage"></div>
      </div>
    </div>
  </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
  function showQtyModal(message) {
    const messageEl = document.getElementById("qtyModalMessage");
    const modalEl = document.getElementById("qtyLimitModal");
    if (messageEl && modalEl) {
      messageEl.innerText = message;
      const modal = new bootstrap.Modal(modalEl);
      modal.show();
      setTimeout(() => modal.hide(), 2000);
    }
  }

  function updateCartUI(cartItems, totalPrice) {
    const tbody = document.querySelector('.cart__table tbody');
    const subtotalEl = document.querySelector('.cart__total .subtotal');
    const proceedBtn = document.querySelector('.cart__total .primary-btn');
    const outOfStockMsg = document.querySelector('.cart__total .text-danger');

    // Check for out-of-stock items
    const hasOutOfStock = cartItems.some(item => item.stock === 0 || item.stock < item.quantity);

    // Update subtotal
    subtotalEl.textContent = `₹${totalPrice}`;

    // Update proceed button visibility
    if (hasOutOfStock) {
      proceedBtn.classList.add('hide');
      if (!outOfStockMsg) {
        const msg = document.createElement('p');
        msg.className = 'text-danger';
        msg.textContent = 'Please remove the out-of-stock product to proceed.';
        proceedBtn.parentNode.insertBefore(msg, proceedBtn);
      }
    } else {
      proceedBtn.classList.remove('hide');
      if (outOfStockMsg) {
        outOfStockMsg.remove();
      }
    }

    // Update cart items
    cartItems.forEach(item => {
      const row = tbody.querySelector(`tr[data-product-id="${item._id}"]`);
      if (row) {
        const qtyCell = row.querySelector('.cart__quantity');
        const totalCell = row.querySelector('.cart__total');
        if (item.stock > 0) {
          qtyCell.innerHTML = `
            <div class="pro-qty" data-stock="${item.stock}">
              <button class="dec qtybtn" data-id="${item._id}">-</button>
              <input type="text" value="${item.quantity}" readonly />
              <button class="inc qtybtn" data-id="${item._id}">+</button>
            </div>
          `;
        } else {
          qtyCell.innerHTML = '<span class="text-danger">Out of Stock</span>';
        }
        totalCell.textContent = `₹${item.itemTotal}`;
      }
    });

    // Reattach event listeners for new quantity buttons
    attachQtyButtonListeners();
  }

  function attachQtyButtonListeners() {
    document.querySelectorAll(".qtybtn").forEach(btn => {
      btn.addEventListener("click", function () {
        const productId = this.dataset.id;
        const isIncrement = this.classList.contains("inc");
        const qtyContainer = this.closest(".pro-qty");
        const input = qtyContainer.querySelector("input");
        const currentQty = parseInt(input.value) || 0;
        const stock = parseInt(qtyContainer.dataset.stock) || 100;

        if (!productId) {
          showQtyModal(" Invalid product.");
          return;
        }

        if (isIncrement) {
          if (currentQty >= 5) {
            showQtyModal(" You can't add more than 5 items.");
            return;
          }
          if (currentQty >= stock) {
            showQtyModal(` Only ${stock} items are available.`);
            return;
          }
        } else {
          if (currentQty <= 1) {
            showQtyModal(" Quantity cannot be less than 1.");
            return;
          }
        }

        fetch(`/cart/update-quantity/${productId}`, {
          method: "PATCH",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ action: isIncrement ? "increment" : "decrement" })
        })
          .then(res => res.json())
          .then(data => {
            if (data.success) {
              updateCartUI(data.cartItems, data.totalPrice);
            } else {
              showQtyModal(data.message === 'You cannot add more than 5 items.' || data.message.startsWith('Only') ? data.message : "⚠️ Failed to update quantity.");
            }
          })
          .catch(err => {
            console.error("Quantity update error:", err);
            showQtyModal(" Something went wrong.");
          });
      });
    });
  }

  document.querySelectorAll(".remove-from-cart").forEach(btn => {
    btn.addEventListener("click", function () {
      const productId = this.dataset.id;
      fetch(`/cart/remove/${productId}`, {
        method: "DELETE"
      })
        .then(res => res.json())
        .then(data => {
          if (data.success) {
            const row = document.querySelector(`tr[data-product-id="${productId}"]`);
            if (row) row.remove();
            // Fetch updated cart data
            fetch('/cart/data')
              .then(res => res.json())
              .then(data => {
                if (data.success) {
                  updateCartUI(data.cartItems, data.totalPrice);
                } else {
                  showQtyModal("⚠️ Failed to refresh cart.");
                }
              });
          }
        })
        .catch(err => {
          console.error("Remove error:", err);
          showQtyModal("⚠️ Something went wrong.");
        });
    });
  });

  // Initial attachment of quantity button listeners
  attachQtyButtonListeners();
</script>

<%- include('../partials/user/footer') %>
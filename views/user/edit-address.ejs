<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Edit Address</title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <link rel="stylesheet" href="/css/style.css" />

  <style>
    body {
      font-family: 'Poppins', sans-serif;
      margin: 0;
      padding: 0;
      min-height: 100vh;
      background-size: cover;
      display: flex;
      flex-direction: column;
    }

    .form-container {
      flex: 1;
      display: flex;
      justify-content: center;
      background: url('/img/background.svg') no-repeat;
      align-items: center;
      padding: 40px 15px;
    }

    .card {
      background-color: rgba(255, 255, 255, 0.95);
      border: none;
      border-radius: 12px;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
      padding: 30px;
      width: 100%;
      max-width: 500px;
    }

    h4 {
      font-weight: 600;
      text-align: center;
      color: #343a40;
    }

    label.form-label {
      font-weight: 500;
    }

    .btn-primary {
      background-color: #007bff;
      border: none;
      padding: 10px 20px;
      border-radius: 6px;
    }

    .btn-primary:hover {
      background-color: #0056b3;
    }

    .btn-secondary {
      background-color: #6c757d;
      border: none;
      padding: 10px 20px;
      border-radius: 6px;
    }

    .btn-secondary:hover {
      background-color: #545b62;
    }

    a {
      text-decoration: none;
    }

    .is-invalid {
      border-color: #dc3545;
    }

    .invalid-feedback {
      display: none;
      color: #dc3545;
      font-size: 0.875em;
    }

    .is-invalid ~ .invalid-feedback {
      display: block;
    }
  </style>
</head>

<body>
  <%- include('../partials/user/header') %>

  <div class="form-container">
    <div class="card">
      <h4 class="mb-4">Edit Address</h4>

      

      <form id="editAddressForm" novalidate>
        <input type="hidden" id="addressId" value="<%= addressId %>" />

        <div class="mb-3">
          <label for="name" class="form-label">Full Name></label>
          <input type="text" class="form-control" id="name" name="name" value="<%= address.name %>"  />
          <div class="invalid-feedback">Full name is required.</div>
        </div>

        <div class="mb-3">
          <label for="phone" class="form-label">Phone</label>
          <input type="tel" class="form-control" id="phone" name="phone" value="<%= address.phone %>" maxlength="10" pattern="[0-9]{10}"  />
          <div class="invalid-feedback">Please enter a valid 10-digit phone number.</div>
        </div>

        <div class="mb-3">
          <label for="alternativePhone" class="form-label">Alternative Phone</label>
          <input type="tel" class="form-control" id="alternativePhone" name="alternativePhone" value="<%= address.alternativePhone %>" maxlength="10" pattern="[0-9]{10}" />
          <div class="invalid-feedback">Please enter a valid 10-digit alternative phone number.</div>
        </div>

    

        <div class="mb-3">
          <label for="town" class="form-label">Town</label>
          <input type="text" class="form-control" id="town" name="town" value="<%= address.town %>" />
        </div>

        <div class="mb-3">
          <label for="city" class="form-label">City</label>
          <input type="text" class="form-control" id="city" name="city" value="<%= address.city %>" />
        </div>

        <div class="mb-3">
          <label for="postCode" class="form-label">Post Code</label>
          <input type="text" class="form-control" id="postCode" name="postCode" value="<%= address.postCode %>" maxlength="6" pattern="[0-9]{6}" required />
          <div class="invalid-feedback">Please enter a valid 6-digit postal code.</div>
        </div>

        <div class="d-flex justify-content-between">
          <a href="/edit-profile" class="btn btn-secondary">Cancel</a>
          <button type="submit" class="btn btn-primary">Update Address</button>
        </div>
       
      </form>
      <div id="responseMessage" class="padding-top-30px alert text-center d-none"></div>
    </div>
    
  </div>

  <%- include('../partials/user/footer') %>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('editAddressForm');
    const responseMessage = document.getElementById('responseMessage');

    // Function to show response message
    const showMessage = (message, isError = false) => {
        responseMessage.classList.remove('d-none', 'alert-success', 'alert-danger');
        responseMessage.classList.add(isError ? 'alert-danger' : 'alert-success');
        responseMessage.textContent = message;
        // Auto-hide message after 5 seconds
        setTimeout(() => {
            responseMessage.classList.add('d-none');
        }, 5000);
    };

    // Form submission handler
    form.addEventListener('submit', async (e) => {
        e.preventDefault();

        // Reset form validation
        form.querySelectorAll('.is-invalid').forEach(input => {
            input.classList.remove('is-invalid');
        });

        // Get form data
        const addressId = document.getElementById('addressId').value;
        const formData = {
            name: document.getElementById('name').value.trim(),
            phone: document.getElementById('phone').value.trim(),
            alternativePhone: document.getElementById('alternativePhone').value.trim(),
            town: document.getElementById('town').value.trim(),
            city: document.getElementById('city').value.trim(),
            postCode: document.getElementById('postCode').value.trim()
        };

        // Client-side validation
        let isValid = true;
        if (!formData.name) {
            document.getElementById('name').classList.add('is-invalid');
            isValid = false;
        }
        if (!formData.phone || !/^[0-9]{10}$/.test(formData.phone)) {
            document.getElementById('phone').classList.add('is-invalid');
            isValid = false;
        }
        if (formData.alternativePhone && !/^[0-9]{10}$/.test(formData.alternativePhone)) {
            document.getElementById('alternativePhone').classList.add('is-invalid');
            isValid = false;
        }
        if (!formData.postCode) {
            document.getElementById('postCode').classList.add('is-invalid');
            isValid = false;
        }

        if (!isValid) {
            showMessage('Please fill all required fields correctly', true);
            return;
        }

        try {
            const response = await fetch(`/edit-address/${addressId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            });

            const result = await response.json();

            if (response.ok) {
                showMessage(result.message);
                // Redirect to edit profile page after successful update
                setTimeout(() => {
                    window.location.href = result.redirect;
                }, 2000);
            } else {
                showMessage(result.error || 'Failed to update address', true);
            }
        } catch (error) {
            console.error('Error submitting form:', error);
            showMessage('An error occurred while updating the address', true);
        }
    });

    // Real-time validation for phone and postcode fields
    const validateInput = (input, pattern) => {
        input.addEventListener('input', () => {
            if (input.value && pattern && !pattern.test(input.value)) {
                input.classList.add('is-invalid');
            } else {
                input.classList.remove('is-invalid');
            }
        });
    };

    validateInput(document.getElementById('phone'), /^[0-9]{10}$/);
    validateInput(document.getElementById('alternativePhone'), /^[0-9]{10}$/);
    validateInput(document.getElementById('postCode'));
});
</script>
</body>
</html>
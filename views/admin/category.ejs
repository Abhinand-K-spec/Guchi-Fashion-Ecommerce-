<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Category Management</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
  <%- include("../partials/admin/header") %>
  <style>
    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(145deg, #1c1c1e, #131314);
      color: #eaeaea;
    }

    .admin-panel {
      width: 90%;
      max-width: 1000px;
      margin: 40px auto;
      background: #212124;
      padding: 40px;
      border-radius: 16px;
      box-shadow: 0 15px 45px rgba(0, 0, 0, 0.9);
    }

    h2 {
      font-weight: 700;
      font-size: 28px;
      margin-bottom: 25px;
      color: #ffffff;
    }

    input[type="text"], textarea, .form-control {
      width: 100%;
      background-color: #2c2c2e;
      border: 1px solid #3a3a3c;
      color: #dddddd;
      padding: 12px 15px;
      border-radius: 10px;
      font-size: 15px;
    }

    input[type="text"]::placeholder,
    textarea::placeholder {
      color: #999;
    }

    input[type="text"]:focus, textarea:focus {
      border-color: #0a84ff;
      outline: none;
      color: #fff;
    }

    textarea {
      resize: none;
    }

    .btn-primary {
      background-color: #0a84ff;
      color: white;
      padding: 10px 24px;
      border: none;
      border-radius: 10px;
      font-weight: 600;
      font-size: 15px;
      cursor: pointer;
    }

    .btn-primary:hover {
      background-color: #0066cc;
    }

    .btn-secondary {
      background: transparent;
      border: 1px solid #444;
      color: #aaa;
      padding: 8px 18px;
      border-radius: 8px;
      font-weight: 500;
    }

    .btn-secondary:hover {
      background-color: #2e2e2e;
    }

    .btn-outline-secondary {
      border-color: #555 !important;
      color: #ccc;
    }

    table {
      width: 100%;
      margin-top: 10px;
      border-collapse: collapse;
      background-color: #1f1f1f;
      color: #e0e0e0;
      border-radius: 10px;
      overflow: hidden;
    }

    th, td {
      padding: 12px;
      text-align: left;
      border-bottom: 1px solid #444;
    }

    th {
      background-color: #2c2c2e;
      font-weight: 600;
      color: #ffffff;
    }

    .action-btn {
      background-color: #dc2626;
      color: white;
      border: none;
      padding: 8px 14px;
      border-radius: 8px;
      cursor: pointer;
      font-weight: 500;
    }

    .pagination {
      display: flex;
      justify-content: center;
      margin-top: 6px;
    }

    .pagination a {
      padding: 8px 12px;
      margin: 0 5px;
      text-decoration: none;
      border-radius: 6px;
      border: 1px solid #444;
      color: #0a84ff;
      background-color: #2e2e2e;
    }

    .pagination .active {
      background-color: #0a84ff;
      color: white;
      border-color: #0a84ff;
    }

    .error {
      color: #ff6b6b;
      font-size: 14px;
      display: none;
    }

    .d-flex {
      display: flex;
      flex-wrap: wrap;
    }

    #clearbtn {
      height: 42px;
    }

    .gap-2 {
      gap: 10px;
    }
  </style>
</head>
<body>
  <div id="category-data" data-cat='<%= JSON.stringify(cat.map(c => c.categoryName.toLowerCase())) %>'></div>

  <div class="admin-panel">
    <h2>Add New Category</h2>
    <form onsubmit="return handleFormSubmit(event)">
      <input type="text" name="name" placeholder="Category name" />
      <span id="name-error" class="error"></span>
      <textarea id="descriptionId" name="description" placeholder="Category description"></textarea>
      <span id="description-error" class="error"></span>
      <button type="submit" class="btn-primary">Create Category</button>
    </form>

    <h2 class="mt-5">Category Management</h2>
    <form method="GET" action="/admin/category/search" class="d-flex gap-2 mb-4">
      <input type="text" name="search" placeholder="Search categories" value="<%= typeof search !== 'undefined' ? search : '' %>" class="form-control" />
      <button type="submit" class="btn btn-primary">Search</button>
      <a id="clearbtn" href="/admin/category/clear" class="btn btn-outline-secondary">Clear</a>
    </form>

    <table>
      <thead>
        <tr>
          <th>Name</th>
          <th>Description</th>
          <th>Status</th>
          <th>Actions</th>
          <th>Edit</th>
        </tr>
      </thead>
      <tbody>
        <% cat.forEach(category => { %>
          <tr>
            <td><%= category.categoryName %></td>
            <td><%= category.description %></td>
            <td><%= category.isListed ? 'Listed' : 'Unlisted' %></td>
            <td>
              <form action="/admin/<%= category.isListed ? 'unlistCategory' : 'listCategory' %>?id=<%= category._id %>" method="POST">
                <button class="action-btn"><%= category.isListed ? 'Unlist' : 'List' %></button>
              </form>
            </td>
            <td>
              <form action="/admin/editCategory/<%= category._id %>" method="GET">
                <button class="btn btn-primary">Edit</button>
              </form>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>

    <div class="pagination">
      <% for (let i = 1; i <= totalPages; i++) { %>
        <a href="?page=<%= i %>" class="<%= i === currentPage ? 'active' : '' %>"><%= i %></a>
      <% } %>
    </div>
  </div>

  <script>
    const existingCategories = JSON.parse(
      document.getElementById('category-data').getAttribute('data-cat')
    );

    function handleFormSubmit(event) {
      event.preventDefault();
      if (!valid()) return false;

      const name = document.getElementsByName('name')[0].value.trim();
      const description = document.getElementById('descriptionId').value.trim();

      fetch('/admin/addCategory', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name, description })
      })
      .then(res => {
        if (!res.ok) {
          return res.json().then(err => { throw new Error(err.error); });
        }
        return res.json();
      })
      .then(() => location.reload())
      .catch(error => {
        alert(error.message || 'An error occurred');
      });
    }

    function valid() {
      clearErrorMsg();
      const name = document.getElementsByName('name')[0].value.trim();
      const description = document.getElementById('descriptionId').value.trim();
      let isValid = true;

      if (name === '') {
        displayErrorMessage('name-error', 'Please enter a name');
        isValid = false;
      } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage('name-error', 'Please enter a valid name');
        isValid = false;
      } else if (existingCategories.includes(name.toLowerCase())) {
        displayErrorMessage('name-error', 'Category already exists');
        isValid = false;
      }

      if (description === '') {
        displayErrorMessage('description-error', 'Please enter a description');
        isValid = false;
      }

      return isValid;
    }

    function displayErrorMessage(id, msg) {
      const el = document.getElementById(id);
      if (el) {
        el.innerText = msg;
        el.style.display = 'block';
      }
    }

    function clearErrorMsg() {
      ['name-error', 'description-error'].forEach(id => {
        const el = document.getElementById(id);
        if (el) {
          el.innerText = '';
          el.style.display = 'none';
        }
      });
    }
  </script>
</body>
</html>
